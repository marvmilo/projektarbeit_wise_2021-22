&ACCESS RVP
&REL 23
&PARAM EDITMASK = *
&PARAM TEMPLATE = C:\KRC\Roboter\Template\vorgabe
&PARAM DISKPATH = KRC:\R1\Program\Sortier Roboter 5. Semester
DEF Sortier_Roboter_V2( )
   
   ;FOLD USER DECL
      DECL BOOL  Containerpruefung
      
   ;ENDFOLD USER DECL
   ;FOLD INI;%{PE}
      ;FOLD BASISTECH INI
         GLOBAL INTERRUPT DECL 3 WHEN $STOPMESS==TRUE DO IR_STOPM ( )
         INTERRUPT ON 3 
         BAS (#INITMOV,0 )
      ;ENDFOLD (BASISTECH INI)
      ;FOLD USER INI
         ;Make your modifications here
         ;EthernetKRL Initialisieren
         RET=EKI_Init("robot_sorting_config")
         RET=EKI_Open("robot_sorting_config")
         ;Venturiventil einschalten Ausgang#
         ;doDruckluftAn = TRUE
         Containerpruefung = FALSE
         
         ;Flags zurücksetzen
         $Flag[FlagEkiEmpfang]=FALSE
         $TIMER[1]=0 ;Timer für Homeposition
         
      ;ENDFOLD (USER INI)
   ;ENDFOLD (INI)
   
   ;FOLD SPTP HOME Vel=100 % PDAT3 ;%{PE}
      ;FOLD Parameters ;%{h}
         ;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.spline; Kuka.IsGlobalPoint=False; Kuka.PointName=HOME; Kuka.BlendingEnabled=False; Kuka.MoveDataPtpName=PDAT3; Kuka.VelocityPtp=100; Kuka.VelocityFieldEnabled=True; Kuka.ColDetectFieldEnabled=True; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=SPTP
      ;ENDFOLD
      SPTP XHOME WITH $VEL_AXIS[1] = SVEL_JOINT(100.0), $TOOL = STOOL2(FHOME), $BASE = SBASE(FHOME.BASE_NO), $IPO_MODE = SIPO_MODE(FHOME.IPO_FRAME), $LOAD = SLOAD(FHOME.TOOL_NO), $ACC_AXIS[1] = SACC_JOINT(PPDAT3), $APO = SAPO_PTP(PPDAT3), $GEAR_JERK[1] = SGEAR_JERK(PPDAT3), $COLLMON_TOL_PRO[1] = USE_CM_PRO_VALUES(0)
   ;ENDFOLD
   
   ;----------Teachmode----------
   IF TeachMode THEN
      WAIT FOR FALSE
      KugelAbholen()
      
      KugelAblegen()   
   ENDIF
   ;-----------------------------   
   
   LOOP
      ;-------------------------------Warten auf Daten und Datenüberprüfung---------------------------------   
      WHILE ((movementclearance == FALSE) OR (Containerpruefung == FALSE)) ; While verlassen wenn Variablen TRUE sind
                  
         WarteDatenempfang() ;Warten bis Daten gesendet wurden
         ;RET = EKI_CheckBuffer("robot_sorting_config", "recv/btp/position")
         
         ;Überprüfung Ethernetverindung
         IF $Flag[1] == FALSE THEN
            GOTO ProgrammEnde ;Sprung zu Prgrammende da Verindung getrennt wurde
         ENDIF
         
         ;----------------Daten einlsen----------------------------
         RET=EKI_GetInt("robot_sorting_config","recv/btp/containernum",Containernummer)
         RET=EKI_GetFrame("robot_sorting_config","recv/btp/position",Kugelposition)
         RET=EKI_GetBool("robot_sorting_config", "recv/robot/movementclear", movementclearance)
         $Flag[FlagEkiEmpfang]=FALSE
         ;---------------------------------------------------------
         ;------------Containernummer überprüfen-------------------
         IF (Containernummer == ContainerLinks) OR (Containernummer == ContainerMitte) OR (Containernummer == ContainerRechts) OR (Containernummer == SchlussMove) THEN
            Containerpruefung = TRUE
            MsgNotify("Die Containernummer %1 wurde uebergen", "Daten von Raspberry", Containernummer)
            
         ELSE
            MsgNotify("Die Containernummer %1 ist nicht vorhanden", "Daten von Raspberry", Containernummer)
            HALT
         ENDIF 
         ;---------------------------------------------------------
         
      ENDWHILE
      ;-----------------------------------------------------------------------------------------------------
      
      ;---------------Auswahl Bewegung nach Containernummer-----------------------------
      SWITCH Containernummer
         
         CASE ContainerLinks, ContainerMitte, ContainerRechts
            
            movementclearance = FALSE ;Fahrbefehl von Raspi zurücksetzen
            Containerpruefung = FALSE ;Containernummerprüfung zurücksetzen
            
            RET = EKI_SetBool("robot_sorting_config","snd/robot/movmentstatus",FALSE) ;Status an Server übergeben, Roboter in Betrieb
            RET = EKI_Send("robot_sorting_config","snd/robot/movmentstatus")
            
            RET = EKI_SetBool("robot_sorting_config","snd/robot/cameraarea",TRUE) ;Status an Server übergeben, Roboter in Kamerabereich
            RET = EKI_Send("robot_sorting_config","snd/robot/cameraarea")
            
            KugelAbholen() ;Funktion KugelnAbholen aufrufen  
            
            TRIGGER WHEN DISTANCE=0 DELAY=0 DO Datenversand() PRIO=5
            
            KugelAblegen(Containernummer);Funktion KugelAblegen aufrufen
            
            RET = EKI_SetInt("robot_sorting_config","snd/btp/isplaced",Containernummer)
            RET = EKI_Send("robot_sorting_config","snd/btp/isplaced")
         
         
         Case SchlussMove
            ;WAIT FOR $IN_HOME
            movementclearance = FALSE ;Fahrbefehl von Raspi zurücksetzen
            Containerpruefung = FALSE ;Containernummerprüfung zurücksetzen
            
            Schluss_Move() ;Aufrufen Programm für Schlussmove
            
      ENDSWITCH
      ;----------------------------------------------------------------------------------
   ENDLOOP
   
   ;------------------------Programm Ende------------------------------------------------
   ProgrammEnde:
   MsgNotify("Ethernetverbindung wurde getrennt - Programm beendet", "Sortier Roboter")
   ;-------------------------------------------------------------------------------------
END

DEF KugelAbholen()
   ;------------TeachMode-------------------
   IF TeachMode THEN
      WAIT FOR FALSE
      ;FOLD SLIN MasterAbholen Vel=0.5 m/s CPDAT9 Tool[4]:Vakumgreifer Base[4]:Tablet_Abholposition ;%{PE}
         ;FOLD Parameters ;%{h}
            ;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.spline; Kuka.IsGlobalPoint=False; Kuka.PointName=MasterAbholen; Kuka.BlendingEnabled=False; Kuka.MoveDataName=CPDAT9; Kuka.VelocityPath=0.5; Kuka.VelocityFieldEnabled=True; Kuka.ColDetectFieldEnabled=True; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=SLIN
         ;ENDFOLD
         SLIN XMasterAbholen WITH $VEL = SVEL_CP(0.5, , LCPDAT9), $TOOL = STOOL2(FMasterAbholen), $BASE = SBASE(FMasterAbholen.BASE_NO), $IPO_MODE = SIPO_MODE(FMasterAbholen.IPO_FRAME), $LOAD = SLOAD(FMasterAbholen.TOOL_NO), $ACC = SACC_CP(LCPDAT9), $ORI_TYPE = SORI_TYP(LCPDAT9), $APO = SAPO(LCPDAT9), $JERK = SJERK(LCPDAT9), $COLLMON_TOL_PRO[1] = USE_CM_PRO_VALUES(0)
      ;ENDFOLD
      
      WAIT FOR FALSE
      ;Masterpunkt auf Null setzen
      
      XMasterAbholen.X = 0
      XMasterAbholen.Y = 0
      XMasterAbholen.Z = 0
      
      xKugel = XMasterAbholen
      
   ENDIF
  ;----------------------------------------- 
  
  ;--------------Bewegungspunkte------------
   ;Punktverschiebung
   xKugel.X = Kugelposition.X
   xKugel.Y = Kugelposition.Y
   
   ;Vorpunkt
   XVorpunktKugel = xKugel : {X 0, Y 0, Z -80, A 0, B 0, C 0}
   ;FOLD SLIN VorpunktKugel CONT Vel=0.7 m/s CPDAT13 Tool[4]:Vakumgreifer Base[4]:Tablet_Abholposition ;%{PE}
      ;FOLD Parameters ;%{h}
         ;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.spline; Kuka.IsGlobalPoint=False; Kuka.PointName=VorpunktKugel; Kuka.BlendingEnabled=True; Kuka.MoveDataName=CPDAT13; Kuka.VelocityPath=0.7; Kuka.VelocityFieldEnabled=True; Kuka.ColDetectFieldEnabled=True; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=SLIN
      ;ENDFOLD
      SLIN XVorpunktKugel WITH $VEL = SVEL_CP(0.7, , LCPDAT13), $TOOL = STOOL2(FVorpunktKugel), $BASE = SBASE(FVorpunktKugel.BASE_NO), $IPO_MODE = SIPO_MODE(FVorpunktKugel.IPO_FRAME), $LOAD = SLOAD(FVorpunktKugel.TOOL_NO), $ACC = SACC_CP(LCPDAT13), $ORI_TYPE = SORI_TYP(LCPDAT13), $APO = SAPO(LCPDAT13), $JERK = SJERK(LCPDAT13), $COLLMON_TOL_PRO[1] = USE_CM_PRO_VALUES(0) C_Spl
   ;ENDFOLD
   ;alternative SLIN xKugel : {X 0, Y 0, Z 60, A 0, B 0, C 0} ; with $vel_axis[1] = 50      ;Geometrischer Operator
   
   ;Zielpunkt
   XZielpunktKugel = xKugel : VerschiebungK_ZielPunkt
   ;FOLD SLIN ZielpunktKugel Vel=0.25 m/s CPDAT16 Tool[4]:Vakumgreifer Base[4]:Tablet_Abholposition ;%{PE}
      ;FOLD Parameters ;%{h}
         ;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.spline; Kuka.IsGlobalPoint=False; Kuka.PointName=ZielpunktKugel; Kuka.BlendingEnabled=False; Kuka.MoveDataName=CPDAT16; Kuka.VelocityPath=0.25; Kuka.VelocityFieldEnabled=True; Kuka.ColDetectFieldEnabled=True; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=SLIN
      ;ENDFOLD
      SLIN XZielpunktKugel WITH $VEL = SVEL_CP(0.25, , LCPDAT16), $TOOL = STOOL2(FZielpunktKugel), $BASE = SBASE(FZielpunktKugel.BASE_NO), $IPO_MODE = SIPO_MODE(FZielpunktKugel.IPO_FRAME), $LOAD = SLOAD(FZielpunktKugel.TOOL_NO), $ACC = SACC_CP(LCPDAT16), $ORI_TYPE = SORI_TYP(LCPDAT16), $APO = SAPO(LCPDAT16), $JERK = SJERK(LCPDAT16), $COLLMON_TOL_PRO[1] = USE_CM_PRO_VALUES(0)
   ;ENDFOLD
   
   ;Greifen   
   ;FOLD Gripper SET [1]Vakum State=[2]Vakum Wait 0.2[s] Check with No Check ;%{PE}
      ;FOLD Parameters Parameters ;%{h}
         ;Params IlfProvider=GripperTech.GripperSet;setgripper=1;setstate=2;setcont=nocont;waittime=0.2;errorstrategy=0
      ;ENDFOLD
      GRPg_SetStateAndCheck(1, 2, 0.2, 0)
   ;ENDFOLD
   
   ;Nachpunkt
   XNachpunktKugel = xKugel : {X 0, Y 0, Z -50, A 0, B 0, C 0}
   ;FOLD SLIN NachpunktKugel CONT Vel=0.5 m/s CPDAT15 Tool[4]:Vakumgreifer Base[4]:Tablet_Abholposition ;%{PE}
      ;FOLD Parameters ;%{h}
         ;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.spline; Kuka.IsGlobalPoint=False; Kuka.PointName=NachpunktKugel; Kuka.BlendingEnabled=True; Kuka.MoveDataName=CPDAT15; Kuka.VelocityPath=0.5; Kuka.VelocityFieldEnabled=True; Kuka.ColDetectFieldEnabled=True; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=SLIN
      ;ENDFOLD
      SLIN XNachpunktKugel WITH $VEL = SVEL_CP(0.5, , LCPDAT15), $TOOL = STOOL2(FNachpunktKugel), $BASE = SBASE(FNachpunktKugel.BASE_NO), $IPO_MODE = SIPO_MODE(FNachpunktKugel.IPO_FRAME), $LOAD = SLOAD(FNachpunktKugel.TOOL_NO), $ACC = SACC_CP(LCPDAT15), $ORI_TYPE = SORI_TYP(LCPDAT15), $APO = SAPO(LCPDAT15), $JERK = SJERK(LCPDAT15), $COLLMON_TOL_PRO[1] = USE_CM_PRO_VALUES(0) C_Spl
   ;ENDFOLD
   ;----------------------------------------
END

DEF KugelAblegen (Container :IN)
   
   DECL INT Container
   ;Timer für Homepisition stoppen und zurücksetzen
   $TIMER_STOP[1]= TRUE
   $Timer[1]=0
   
   
  ;--------------TeachMode---------------------- 
   IF TeachMode THEN
      WAIT FOR FALSE
      
      ;FOLD SLIN ContainerLinks Vel=0.5 m/s CPDAT10 Tool[4]:Vakumgreifer Base[4]:Tablet_Abholposition ;%{PE}
         ;FOLD Parameters ;%{h}
            ;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.spline; Kuka.IsGlobalPoint=False; Kuka.PointName=ContainerLinks; Kuka.BlendingEnabled=False; Kuka.MoveDataName=CPDAT10; Kuka.VelocityPath=0.5; Kuka.VelocityFieldEnabled=True; Kuka.ColDetectFieldEnabled=True; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=SLIN
         ;ENDFOLD
         SLIN XContainerLinks WITH $VEL = SVEL_CP(0.5, , LCPDAT10), $TOOL = STOOL2(FContainerLinks), $BASE = SBASE(FContainerLinks.BASE_NO), $IPO_MODE = SIPO_MODE(FContainerLinks.IPO_FRAME), $LOAD = SLOAD(FContainerLinks.TOOL_NO), $ACC = SACC_CP(LCPDAT10), $ORI_TYPE = SORI_TYP(LCPDAT10), $APO = SAPO(LCPDAT10), $JERK = SJERK(LCPDAT10), $COLLMON_TOL_PRO[1] = USE_CM_PRO_VALUES(0)
      ;ENDFOLD
      WAIT FOR FALSE
      
      ;FOLD SLIN ContainerMitte Vel=0.5 m/s CPDAT11 Tool[4]:Vakumgreifer Base[4]:Tablet_Abholposition ;%{PE}
         ;FOLD Parameters ;%{h}
            ;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.spline; Kuka.IsGlobalPoint=False; Kuka.PointName=ContainerMitte; Kuka.BlendingEnabled=False; Kuka.MoveDataName=CPDAT11; Kuka.VelocityPath=0.5; Kuka.VelocityFieldEnabled=True; Kuka.ColDetectFieldEnabled=True; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=SLIN
         ;ENDFOLD
         SLIN XContainerMitte WITH $VEL = SVEL_CP(0.5, , LCPDAT11), $TOOL = STOOL2(FContainerMitte), $BASE = SBASE(FContainerMitte.BASE_NO), $IPO_MODE = SIPO_MODE(FContainerMitte.IPO_FRAME), $LOAD = SLOAD(FContainerMitte.TOOL_NO), $ACC = SACC_CP(LCPDAT11), $ORI_TYPE = SORI_TYP(LCPDAT11), $APO = SAPO(LCPDAT11), $JERK = SJERK(LCPDAT11), $COLLMON_TOL_PRO[1] = USE_CM_PRO_VALUES(0)
      ;ENDFOLD
      WAIT FOR FALSE    
      
      ;FOLD SLIN ContainerRechts Vel=0.5 m/s CPDAT12 Tool[4]:Vakumgreifer Base[4]:Tablet_Abholposition ;%{PE}
         ;FOLD Parameters ;%{h}
            ;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.spline; Kuka.IsGlobalPoint=False; Kuka.PointName=ContainerRechts; Kuka.BlendingEnabled=False; Kuka.MoveDataName=CPDAT12; Kuka.VelocityPath=0.5; Kuka.VelocityFieldEnabled=True; Kuka.ColDetectFieldEnabled=True; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=SLIN
         ;ENDFOLD
         SLIN XContainerRechts WITH $VEL = SVEL_CP(0.5, , LCPDAT12), $TOOL = STOOL2(FContainerRechts), $BASE = SBASE(FContainerRechts.BASE_NO), $IPO_MODE = SIPO_MODE(FContainerRechts.IPO_FRAME), $LOAD = SLOAD(FContainerRechts.TOOL_NO), $ACC = SACC_CP(LCPDAT12), $ORI_TYPE = SORI_TYP(LCPDAT12), $APO = SAPO(LCPDAT12), $JERK = SJERK(LCPDAT12), $COLLMON_TOL_PRO[1] = USE_CM_PRO_VALUES(0)
      ;ENDFOLD
      
   ENDIF
 ;----------------------------------------------
 
 
 ;-----------Auswahl Ablageposition-------------
   Switch Container
      
      Case ContainerLinks
         XZielpunktContainer = XContainerLinks
         
      Case ContainerMitte
         XZielpunktContainer = XContainerMitte
         
      Case ContainerRechts
         XZielpunktContainer = XContainerRechts
         
      Default
         ;Fehler
         MsgQuit("Falsche Containerplatz uebergeben", "Kugel Ablegen")
         
   Endswitch
   ;-----------------------------------------
   
   
   ;-----------Bewegungspunkte---------------
   ;Vorpunkt bezogen auf Zielpunkt 
   XVorpunktContainer = XZielpunktContainer : {X 0, Y 0, Z -100, A 0, B 0, C 0}
   ;FOLD SLIN VorpunktContainer CONT Vel=1 m/s CPDAT18 Tool[4]:Vakumgreifer Base[4]:Tablet_Abholposition ;%{PE}
      ;FOLD Parameters ;%{h}
         ;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.spline; Kuka.IsGlobalPoint=False; Kuka.PointName=VorpunktContainer; Kuka.BlendingEnabled=True; Kuka.MoveDataName=CPDAT18; Kuka.VelocityPath=1; Kuka.VelocityFieldEnabled=True; Kuka.ColDetectFieldEnabled=True; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=SLIN
      ;ENDFOLD
      SLIN XVorpunktContainer WITH $VEL = SVEL_CP(1.0, , LCPDAT18), $TOOL = STOOL2(FVorpunktContainer), $BASE = SBASE(FVorpunktContainer.BASE_NO), $IPO_MODE = SIPO_MODE(FVorpunktContainer.IPO_FRAME), $LOAD = SLOAD(FVorpunktContainer.TOOL_NO), $ACC = SACC_CP(LCPDAT18), $ORI_TYPE = SORI_TYP(LCPDAT18), $APO = SAPO(LCPDAT18), $JERK = SJERK(LCPDAT18), $COLLMON_TOL_PRO[1] = USE_CM_PRO_VALUES(0) C_Spl
   ;ENDFOLD
   
   ;Zielpunkt
   ;FOLD SLIN ZielpunktContainer Vel=0.5 m/s CPDAT17 Tool[4]:Vakumgreifer Base[4]:Tablet_Abholposition ;%{PE}
      ;FOLD Parameters ;%{h}
         ;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.spline; Kuka.IsGlobalPoint=False; Kuka.PointName=ZielpunktContainer; Kuka.BlendingEnabled=False; Kuka.MoveDataName=CPDAT17; Kuka.VelocityPath=0.5; Kuka.VelocityFieldEnabled=True; Kuka.ColDetectFieldEnabled=True; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=SLIN
      ;ENDFOLD
      SLIN XZielpunktContainer WITH $VEL = SVEL_CP(0.5, , LCPDAT17), $TOOL = STOOL2(FZielpunktContainer), $BASE = SBASE(FZielpunktContainer.BASE_NO), $IPO_MODE = SIPO_MODE(FZielpunktContainer.IPO_FRAME), $LOAD = SLOAD(FZielpunktContainer.TOOL_NO), $ACC = SACC_CP(LCPDAT17), $ORI_TYPE = SORI_TYP(LCPDAT17), $APO = SAPO(LCPDAT17), $JERK = SJERK(LCPDAT17), $COLLMON_TOL_PRO[1] = USE_CM_PRO_VALUES(0)
   ;ENDFOLD
   
   ;Greifen   
   ;FOLD Gripper SET [1]Vakum State=[1]OPEN Wait 0.2[s] Check with No Check ;%{PE}
      ;FOLD Parameters Parameters ;%{h}
         ;Params IlfProvider=GripperTech.GripperSet;setgripper=1;setstate=1;setcont=nocont;waittime=0.2;errorstrategy=0
      ;ENDFOLD
      GRPg_SetStateAndCheck(1, 1, 0.2, 0)
   ;ENDFOLD
   
   ;-----------------------------------------
   
   
   ;Timer Starten
   $TIMER_STOP[1]= FALSE 
   
END

DEF WarteDatenempfang()
;----------Warten auf Daten und Ausgabe Meldung---------
   DECL BOOL NotifyExist
   NotifyExist  = FALSE
   
   LOOP 
      IF $Flag[FlagEkiEmpfang] == FALSE THEN
         IF NOT NotifyExist THEN
            MsgNotify("Warte auf Daten von Raspberry PI", "Sortier Roboter")
            NotifyExist = TRUE
         ENDIF
      ENDIF
      
      IF $Flag[FlagEkiEmpfang] == TRUE THEN
         NotifyExist = FALSE
         EXIT    
      ENDIF            
      
      IF $Timer[1] > 5000 THEN 
         
         ;HomePosition
         ;FOLD SPTP HOME Vel=80 % PDAT21 ;%{PE}
            ;FOLD Parameters ;%{h}
               ;Params IlfProvider=kukaroboter.basistech.inlineforms.movement.spline; Kuka.IsGlobalPoint=False; Kuka.PointName=HOME; Kuka.BlendingEnabled=False; Kuka.MoveDataPtpName=PDAT21; Kuka.VelocityPtp=80; Kuka.VelocityFieldEnabled=True; Kuka.ColDetectFieldEnabled=True; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=SPTP
            ;ENDFOLD
            SPTP XHOME WITH $VEL_AXIS[1] = SVEL_JOINT(80.0), $TOOL = STOOL2(FHOME), $BASE = SBASE(FHOME.BASE_NO), $IPO_MODE = SIPO_MODE(FHOME.IPO_FRAME), $LOAD = SLOAD(FHOME.TOOL_NO), $ACC_AXIS[1] = SACC_JOINT(PPDAT21), $APO = SAPO_PTP(PPDAT21), $GEAR_JERK[1] = SGEAR_JERK(PPDAT21), $COLLMON_TOL_PRO[1] = USE_CM_PRO_VALUES(0)
         ;ENDFOLD
         RET = EKI_SetBool("robot_sorting_config","snd/robot/movmentstatus",TRUE) ;Status an Server übergeben, Roboter in Home
         RET = EKI_Send("robot_sorting_config","snd/robot/movmentstatus")
         ;Timer Stopen
         $TIMER_STOP[1] = TRUE
         $TIMER[1]=0
      ENDIF
      
      ;Überprüfung Ethernetverindung
      IF $Flag[1] == FALSE THEN
         EXIT
      ENDIF
      
   ENDLOOP 
   
END

DEF Datenversand()
   ;Funktion für Versenden Status an TCP-Server
   RET = EKI_SetBool("robot_sorting_config","snd/robot/cameraarea",FALSE) ;Status an Server übergeben, Roboter außerhalb Kamerabereich
   RET = EKI_Send("robot_sorting_config","snd/robot/cameraarea")
   
END